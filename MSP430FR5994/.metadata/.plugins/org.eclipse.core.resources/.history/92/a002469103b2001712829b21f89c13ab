#include <msp430.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

unsigned int ByteCount=0;
unsigned int nBytes=0;
void main(void){
    //Configure  RGB Settings
    WDTCTL= WDTPW + WDTHOLD;
    PM5CTL0 &= ~LOCKLPM5;
    UCA3CTL1 |= UCSWRST;
    P1DIR |= BIT4 + BIT5;
    P3DIR |= BIT4;
    P1SEL0 |= BIT5 + BIT4;
    P3SEL0 |= BIT4;
    P1SEL1 &= ~BIT5+ ~BIT4;
    P3SEL1 &= ~BIT4;


    TB0CTL=TASSEL_2 + MC_1;
    TB0CCR0=255;
    TB0CCTL1 |= OUTMOD_3;
    TB0CCTL2 |= OUTMOD_3;
    TB0CCTL3 |= OUTMOD_3;
    TB0CCR1 = 200;
    TB0CCR2 = 200;
    TB0CCR3 = 200;

   //UART
    UCA3BR1=0;
    P6SEL0 = BIT0 + BIT1;
    UCA3CTL1 &= ~UCSWRST;
    UCA3BR0= 3;
    UCA3MCTLW = UCBRS1 + UCBRF_13 + UCOS16;
    UCA3IE |= UCRXIE;
    UCA3CTL1 |=UCSSEL_2;
    __bis_SR_register(LPM0_bits + GIE);
    _no_operation();
}

#pragma vector=USCI_A3_VECTOR
__interrupt void USCI_A3_ISR(void)
{
    switch(__even_in_range(UCA3IV, 4))
    {
    case 0: break;

    case 2:{
        while(!(UCA3IFG & UCTXIFG));
     if(ByteCount==0){
     UCA3TXBUF=UCA3RXBUF-3;
     nBytes=UCA3RXBUF;
     ByteCount ++;
     }
    else if((ByteCount > 0 & ByteCount < 4)){
        switch(ByteCount){
    case 1:{
           TB0CCR1=255-UCA3RXBUF;
           break;
    }
    case 2:{

                TB0CCR2=255-UCA3RXBUF;
                break;
    }
    case 3:{

                       TB0CCR3=255-UCA3RXBUF;
                break;
    }

    default: break;
    }
     ByteCount++;
    }
            else if(ByteCount>3 & ByteCount <= nBytes - 1){
                if(ByteCount !=(nBytes-1)){
                    UCA3TXBUF=UCA3RXBUF;
                    ByteCount++;
            }
            else{
                UCA3TXBUF = 0x0D;
                    ByteCount=0;
                __delay_cycles(100000);
            }
}
   break;
}
            case 4: break;
            default: break;
       }

}


